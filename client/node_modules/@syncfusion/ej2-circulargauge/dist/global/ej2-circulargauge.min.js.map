{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper-common.js","../../src/circular-gauge/utils/helper-circular-gauge.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/utils/helper-tooltip.js","../../src/circular-gauge/utils/helper-axis-panel.js","../../src/circular-gauge/utils/helper-axis-renderer.js","../../src/circular-gauge/utils/helper-pointer-renderer.js","../../src/circular-gauge/utils/helper-legend.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        if (range.roundedCornerRadius <= 0 && range.startWidth === range.endWidth) {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n        else {\n            return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n        }\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                tooltipTextOpacity: 1,\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                tooltipTextOpacity: 1,\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipTextOpacity: 1,\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        /**\n         * Sets and gets the value of the pointer in circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isPointerAnimation = true;\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index, gauge) {\n        var _this = this;\n        var width = gauge.availableSize.width;\n        var element = createElement('div', {\n            id: gauge.element.id + '_Annotations_' + index\n        });\n        var parentElement = getElement(gauge.element.id + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(gauge.element.id + '_Secondary_Element'))) {\n            document.getElementById(gauge.element.id + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index, gauge);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex, gauge) {\n        var _this = this;\n        var axis = gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: gauge.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, gauge);\n                if (templateFn && templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation, gauge);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(gauge.element.id + '_Secondary_Element');\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation, gauge) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function () { };\n    /**\n    * Function to measure the element rect.\n    *\n    * @param {HTMLElement} element - Specifies the html element.\n    * @returns {ClientRect} - Returns the client rect.\n    * @private\n    */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    var pointerTextStyle = {\n                        color: tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        opacity: tooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontFamily: tooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontStyle: tooltipArgs.tooltip.textStyle.fontStyle,\n                        fontWeight: tooltipArgs.tooltip.textStyle.fontWeight, size: tooltipArgs.tooltip.textStyle.size\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, pointerTextStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily\n                        || _this.gauge.themeStyle.fontFamily;\n                    rangeTooltipTextStyle_1.opacity = rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity ||\n                        _this.gauge.themeStyle.tooltipTextOpacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    var annotationTextStyle = {\n                        color: annotationTooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        fontFamily: annotationTooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: annotationTooltipArgs.tooltip.textStyle.fontWeight,\n                        opacity: annotationTooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontStyle: annotationTooltipArgs.tooltip.textStyle.fontStyle,\n                        size: annotationTooltipArgs.tooltip.textStyle.size\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTextStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((this.gauge.isVue || this.gauge.isVue3)) {\n                    this.gauge.clearTemplate([this.tooltipEle.children[0].id], [0]);\n                }\n                else {\n                    this.gauge.clearTemplate();\n                }\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split(\"px\")[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} template - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function () {\n        this.tooltipEle = null;\n        this.currentAxis = null;\n        this.tooltip = null;\n        this.currentPointer = null;\n        this.currentRange = null;\n        this.currentAnnotation = null;\n        this.borderStyle = null;\n        this.svgTooltip = null;\n        this.tooltipRect = null;\n        this.pointerEle = null;\n        this.annotationTargetElement = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.destroy = function () {\n        this.gauge = null;\n        this.majorValues = [];\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                range = axis.visibleRange;\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if ((animate || pointer.animation.enable) && (!_this.gauge.isPropertyChange || pointer.isPointerAnimation)) {\n                    pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                    _this.doPointerAnimation(childElement, pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= radius && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    _this.calculateTextElement(axis, pointer, value, element);\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to set the text value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @param {Element} Specifies the text element.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.calculateTextElement = function (axis, pointer, value, element) {\n        var textangle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var textlocation = getLocationFromAngle(textangle, pointer.currentRadius, this.gauge.midPoint);\n        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n        element.setAttribute('x', String(textlocation.x));\n        element.setAttribute('y', String(textlocation.y));\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var style = {\n                size: pointer.textStyle.size,\n                color: pointer.textStyle.color,\n                fontFamily: pointer.textStyle.fontFamily,\n                fontStyle: pointer.textStyle.fontStyle,\n                fontWeight: pointer.textStyle.fontWeight,\n                opacity: pointer.textStyle.opacity\n            };\n            style.color = style.color || this.gauge.themeStyle.pointerColor;\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            var textObject = textElement(textOption, style, style.color, parentElement, 'pointer-events : auto; ');\n            textObject['style']['visibility'] = (pointer.animation.enable && (!this.gauge.isPropertyChange || pointer.isPointerAnimation) && this.gauge.animatePointer) ? 'hidden' : 'visible';\n            pointer.pathElement.push(textObject);\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointerElement, pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                        _this.performTextAnimation(pointerElement, startValue, endValue, axis, pointer);\n                    }\n                    else {\n                        _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @private\n     */\n    PointerRenderer.prototype.performTextAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var textangle;\n        var textlocation;\n        var pointerValue = 0;\n        var timeStamp;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        element = !isNullOrUndefined(element.children[0]) ? element.children[0] : element;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    timeStamp = (args.timeStamp / pointer.animation.duration);\n                    pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                    textangle = getAngleFromValue(pointerValue, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n                    textlocation = getLocationFromAngle(textangle, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                    element['style']['visibility'] = 'visible';\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = typeof (pointer.roundedCornerRadius) === 'string' ? parseInt(pointer.roundedCornerRadius, 10) : pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index, gauge);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    AxisLayoutPanel.prototype.destroy = function () {\n        this.gauge = null;\n        this.farSizes = [];\n        if (!isNullOrUndefined(this.axisRenderer)) {\n            this.axisRenderer.destroy();\n        }\n        this.axisRenderer = null;\n        if (!isNullOrUndefined(this.pointerRenderer)) {\n            this.pointerRenderer.destroy();\n        }\n        this.pointerRenderer = null;\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart == rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.legendRegions = [];\n        this.titleRect = null;\n        this.pageXCollections = [];\n        this.clipRect = null;\n        this.legendTranslateGroup = null;\n        this.legend = null;\n        this.pagingRegions = [];\n        this.toggledIndexes = [];\n        this.legendBounds = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (gauge, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Bootstrap5Dark'\n                || gauge.theme === 'Fluent' || gauge.theme === 'FluentDark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, gauge.availableSize.width, gauge.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     *  @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (gauge, type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                gauge.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(gauge.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function () { };\n    /**\n    * To trigger the download element\n    *\n    * @param {string} fileName - Specifies the file name.\n    * @param {ExportType} type - Specifies the export type.\n    * @param {string} url - Specifies the url.\n    * @param {boolean} isDownload - Specifies the boolean value.\n    * @returns {void}\n    */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printFunction, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (gauge, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(gauge, elements), name: beforePrint\n        };\n        gauge.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (gauge, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(gauge.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.isPropertyChange = false;\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                var start = typeof this.activeRange.start === 'string' ? parseFloat(this.activeRange.start) : this.activeRange.start;\n                var end = typeof this.activeRange.end === 'string' ? parseFloat(this.activeRange.end) : this.activeRange.end;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((start < end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((start < end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: this.availableSize,\n            name: resized,\n            cancel: false,\n            currentSize: this.calculateSvgSize()\n        };\n        this.trigger(resized, args);\n        if (!args.cancel) {\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                this.animatePointer = false;\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        }\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                while (this.svgObject.childNodes.length > 0) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                    remove(this.svgObject);\n                }\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            var style = {\n                color: this.titleStyle.color,\n                size: this.titleStyle.size || this.themeStyle.fontSize,\n                fontFamily: this.titleStyle.fontFamily || this.themeStyle.fontFamily,\n                fontStyle: this.titleStyle.fontStyle,\n                fontWeight: this.titleStyle.fontWeight || this.themeStyle.titleFontWeight,\n                opacity: this.titleStyle.opacity\n            };\n            var titleSize = style.size;\n            if (!isNaN(Number(titleSize))) {\n                style.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, style);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, style, style.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('role', '');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        if (pointer.currentValue != value) {\n            var enableAnimation_1 = pointer.animation.enable;\n            value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n            value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n            pointer['isPointerAnimation'] = true;\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    setStyles(element, pointer.color, pointer.border);\n                    if (enableAnimation_1) {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n                else {\n                    if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                        setStyles(element, pointer.cap.color, pointer.cap.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                        setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                        setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                    }\n                    else if (pointer.type === 'Marker' && pointer.markerShape !== 'Text') {\n                        setStyles(element, pointer.color, pointer.border);\n                    }\n                    if (enableAnimation_1) {\n                        if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performTextAnimation(element, pointer.currentValue, value, axis, pointer);\n                        }\n                        else {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                        }\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n            });\n        }\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex, this);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        if (!isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel.destroy();\n        }\n        this.availableSize = null;\n        this.midPoint = null;\n        this.activePointer = null;\n        this.activeAxis = null;\n        this.activeRange = null;\n        this.gaugeRect = null;\n        this.gaugeAxisLayoutPanel = null;\n        this.themeStyle = null;\n        this.removeSvg();\n        this.svgObject = null;\n        this.renderer = null;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        this.isPropertyChange = true;\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    var axesPropertyLength = Object.keys(newProp.axes).length;\n                    for (var x = 0; x < axesPropertyLength; x++) {\n                        if (!isNullOrUndefined(newProp.axes[x])) {\n                            var collection = Object.keys(newProp.axes[x]);\n                            for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                var collectionProp = collection_1[_b];\n                                if (collectionProp === 'pointers') {\n                                    var pointerPropertyLength = Object.keys(newProp.axes[x].pointers).length;\n                                    for (var y = 0; y < pointerPropertyLength; y++) {\n                                        var index = parseInt(Object.keys(newProp.axes[x].pointers)[y]);\n                                        if (!isNullOrUndefined(Object.keys(newProp.axes[x].pointers[index]))) {\n                                            this.axes[x].pointers[index]['previousValue'] = this.axes[x].pointers[index]['currentValue'];\n                                            this.axes[x].pointers[index]['isPointerAnimation'] = Object.keys(newProp.axes[x].pointers[index]).indexOf('value') > -1;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame && !this.isRangeUpdate) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n        this.isRangeUpdate = false;\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontWeight: null, fontFamily: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","roundedCornerRadius","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","isNaN","parseFloat","querySelectorAll","length","charAt","templateComplier","querySelector","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getRangePalette","theme","palette","toLowerCase","getThemeStyle","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","tooltipTextOpacity","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","titleFontWeight","tooltipFillOpacity","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","isPointerAnimation","Axis","visibleLabels","Collection","Annotations","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","pointerTooltip","tooltipRect","findPosition","pointerTextStyle","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTooltip","annotationTemplate","elementSizeAn","annotationTextStyle","removeTooltip","clearTemplate","children","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","controlInstance","className","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","isPropertyChange","previousValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","calculateTextElement","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","textObject","animatePointer","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","performRangeBarAnimation","performTextAnimation","performNeedleAnimation","timeStamp","pointerValue","val","progress","args","delay","model","sweepAngle","pointAngle","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","axisLabelRenderSuccess","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","legendRenderingCollections","titleRect","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","userAgent","PdfPageOrientation","Landscape","exportElement","cloneNode","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","printFunction","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","tooltipModule","enableRangeDrag","svgElement","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","enableAnimation_1","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","axesPropertyLength","_b","collection_1","pointerPropertyLength","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}
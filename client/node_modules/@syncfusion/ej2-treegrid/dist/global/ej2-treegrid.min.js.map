{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/renderer/virtual-tree-freeze-render.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[i]] = column[keys[i]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[i] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[stackedHeader] ? this.parent[columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[i].hasChildRecords) {\n                                    _this.updateParentSelection(child[i]);\n                                }\n                                else if (!(child[i].hasChildRecords) && !isNullOrUndefined(child[i])) {\n                                    _this.updateSelectedItems(child[i], child[i].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[j].isDataRow && !isNullOrUndefined(rowsObj[j].index)) {\n                        var cell = rowsObj[j][cells][cellIndex];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[j].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[j].data, { index: rowsObj[j][rowIdx] });\n                        var treecell = _this.parent.getRows()[j].cells[cellIndex];\n                        _this.cellRender({ data: rowsObj[j].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) || ((currentData[this.parent.hasChildMapping]) &&\n                isCountRequired(this.parent) && (this.parent.initialRender || isNullOrUndefined(this.parent['dataResults'].result) || this.parent.enableInfiniteScrolling))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[getColumnByField](this.parent.grid.\n                    sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[root] = this[root] ? this[root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n        this.grid.enableVirtualMaskRow = false; // Need to update in virtual mask row feature implementation.\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (args['name'] === 'rowSelecting' && !isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell')) && (isNullOrUndefined(args['previousRowIndex']))) {\n            args.cancel = true;\n            return;\n        }\n        else if (args['name'] === 'rowDeselecting' && !isNullOrUndefined(args.target) && ((!isNullOrUndefined(args.row) && (!args.row.length)) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell')))) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[i].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[updateRowSelection](_this.getRows()[i], _this.getCurrentViewRecords()[i].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[action] === 'expand' || _this.dataResults[action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[updateRowSelection](_this.getRows()[index], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, this.columnModel.length - 1);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[prop] = treeGridColumn[prop] = treeColumn[prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[i]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[k];\n                delete currentObject[objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[i].field && this.columnModel[i].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[i].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[i]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                record = this.grid.getCurrentViewRecords()[row.rowIndex];\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[i][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[i], action: 'edit' }, this, this.isSelfReference, totalRecords[i].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[i].parentItem)) {\n                var puniqueID_1 = record[i].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[i], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[i], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                _this.flatData = _this.infiniteScrollData;\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if ((!isNullOrUndefined(childRecords[i].childRecords) && childRecords[i].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[i], cell: rows[i].cells[index],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[i], row: rows[i]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[i]).rowIndex;\n                data[i] = this.parent.getCurrentViewRecords()[index];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[selectedItemIndex] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[selectedItemIndex]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[i].taskData === record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[i].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[action] = 'indenting';\n                tObj[droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[dropIndex].getAttribute('data-rowindex'), 10);\n                }\n                tObj[action] = 'outdenting';\n                tObj[droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[i].parentUniqueID, this.parent);\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[rowIndex];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[selectedItemIndex].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[index];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[i];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, tObj);\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, this.parent);\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[d].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[i_1].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[i_1]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[i_2][index] = i_2;\n                setValue('uniqueIDCollection.' + data[i_2][uniqueID] + '.index', i_2, this.parent);\n                if (!data[i_2][level]) {\n                    this.parent.parentData.push(data[i_2]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[index] = this.parent.getSelectedRows()[0][rowIndex];\n        }\n        else {\n            args[index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n            }\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[k];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[treeColIndex];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[l];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[k].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[i].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[i];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[primaryKeys_2[0]] === args.data[i][primaryKeys_2[0]]) {\n                            data_1[i] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[i].uniqueID);\n                var childs = findChildrenRecords(data_1[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[index]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ? this.parent.getRowsObject()[index].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction());\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[containerRect])) {\n            this.observer[containerRect] = this.observers[containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[preventEvent]) {\n                    _this.parent.showSpinner();\n                }\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                if (!_this.parent.isFrozenGrid()) {\n                    _this.virtualEle.adjustTable(x, _this.translateY);\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - this.parent.getRowHeight() * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (currentViewData.length && this.startIndex > currentViewData[0][indexValue] &&\n                ((this.startIndex - currentViewData[0][indexValue]) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - this.parent.getRowHeight() * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left')) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n            _super.prototype[ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[options].prevTop = this[options].prevLeft = 0;\n        return function (e) {\n            var top = _this[options].movableContainer ? _this[options].container.scrollTop : e.target.scrollTop;\n            var left = _this[options].movableContainer ? _this[options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[options].prevTop < top ? 'down' : 'up';\n            direction = _this[options].prevLeft === left ? direction : _this[options].prevLeft < left ? 'right' : 'left';\n            _this[options].prevTop = top;\n            _this[options].prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && current.axis === 'X') {\n                if (_this[movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[movableEle], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[element], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n            }\n            _this[fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeContentRender, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new FreezeContentRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","rowsObj","getRowsObject","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","rowDragAndDropModule","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","enableVirtualMaskRow","triggerEvents","IsExpandCollapseClicked","bindGridEvents","rowSelecting","rowDeselecting","rowSelected","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","isQueryInvokedFromData","callBackPromise_2","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","isFrozenGrid","movableContent","frozenContent","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","val","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","getVisibleRecords","sHeight","scrollHeight","clientHeight","getContent","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","this_1","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","blockIndexes","getBlockIndexes","url","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","pageSize","propname","skip","size","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","rowCollection","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","xAxis","axis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","virtualEle","adjustTable","header","sentinel","outBuffer","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","virtualScrollHandlers","movableContainer","delay","debounced50","debounce","prevTop","prevLeft","scrollbar","delta","clearTimeout","setTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","wrapper","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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"}
{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/renderer/virtual-tree-freeze-render.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[i]] = column[keys[i]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[i] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[stackedHeader] ? this.parent[columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[i].hasChildRecords) {\n                                    _this.updateParentSelection(child[i]);\n                                }\n                                else if (!(child[i].hasChildRecords) && !isNullOrUndefined(child[i])) {\n                                    _this.updateSelectedItems(child[i], child[i].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[j].isDataRow && !isNullOrUndefined(rowsObj[j].index)) {\n                        var cell = rowsObj[j][cells][cellIndex];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[j].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[j].data, { index: rowsObj[j][rowIdx] });\n                        var treecell = _this.parent.getRows()[j].cells[cellIndex];\n                        _this.cellRender({ data: rowsObj[j].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) || ((currentData[this.parent.hasChildMapping]) &&\n                isCountRequired(this.parent) && (this.parent.initialRender || isNullOrUndefined(this.parent['dataResults'].result) || this.parent.enableInfiniteScrolling))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[getColumnByField](this.parent.grid.\n                    sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[root] = this[root] ? this[root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n        this.grid.enableVirtualMaskRow = false; // Need to update in virtual mask row feature implementation.\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (args['name'] === 'rowSelecting' && !isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell')) && (isNullOrUndefined(args['previousRowIndex']))) {\n            args.cancel = true;\n            return;\n        }\n        else if (args['name'] === 'rowDeselecting' && !isNullOrUndefined(args.target) && ((!isNullOrUndefined(args.row) && (!args.row.length)) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell')))) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[i].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[updateRowSelection](_this.getRows()[i], _this.getCurrentViewRecords()[i].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[action] === 'expand' || _this.dataResults[action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[updateRowSelection](_this.getRows()[index], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, this.columnModel.length - 1);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[prop] = treeGridColumn[prop] = treeColumn[prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[i]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[k];\n                delete currentObject[objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[i].field && this.columnModel[i].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[i].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[i]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                record = this.grid.getCurrentViewRecords()[row.rowIndex];\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[i][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[i], action: 'edit' }, this, this.isSelfReference, totalRecords[i].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[i].parentItem)) {\n                var puniqueID_1 = record[i].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[i], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[i], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                _this.flatData = _this.infiniteScrollData;\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if ((!isNullOrUndefined(childRecords[i].childRecords) && childRecords[i].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[i], cell: rows[i].cells[index],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[i], row: rows[i]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[i]).rowIndex;\n                data[i] = this.parent.getCurrentViewRecords()[index];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[selectedItemIndex] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[selectedItemIndex]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[i].taskData === record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[i].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[action] = 'indenting';\n                tObj[droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[dropIndex].getAttribute('data-rowindex'), 10);\n                }\n                tObj[action] = 'outdenting';\n                tObj[droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[i].parentUniqueID, this.parent);\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[rowIndex];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[selectedItemIndex].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[index];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[i];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, tObj);\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, this.parent);\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[d].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[i_1].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[i_1]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[i_2][index] = i_2;\n                setValue('uniqueIDCollection.' + data[i_2][uniqueID] + '.index', i_2, this.parent);\n                if (!data[i_2][level]) {\n                    this.parent.parentData.push(data[i_2]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[index] = this.parent.getSelectedRows()[0][rowIndex];\n        }\n        else {\n            args[index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n            }\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[k];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[treeColIndex];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[l];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[k].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[i].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[i];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[primaryKeys_2[0]] === args.data[i][primaryKeys_2[0]]) {\n                            data_1[i] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[i].uniqueID);\n                var childs = findChildrenRecords(data_1[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[index]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ? this.parent.getRowsObject()[index].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction());\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[containerRect])) {\n            this.observer[containerRect] = this.observers[containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[preventEvent]) {\n                    _this.parent.showSpinner();\n                }\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                if (!_this.parent.isFrozenGrid()) {\n                    _this.virtualEle.adjustTable(x, _this.translateY);\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - this.parent.getRowHeight() * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (currentViewData.length && this.startIndex > currentViewData[0][indexValue] &&\n                ((this.startIndex - currentViewData[0][indexValue]) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - this.parent.getRowHeight() * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left')) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n            _super.prototype[ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[options].prevTop = this[options].prevLeft = 0;\n        return function (e) {\n            var top = _this[options].movableContainer ? _this[options].container.scrollTop : e.target.scrollTop;\n            var left = _this[options].movableContainer ? _this[options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[options].prevTop < top ? 'down' : 'up';\n            direction = _this[options].prevLeft === left ? direction : _this[options].prevLeft < left ? 'right' : 'left';\n            _this[options].prevTop = top;\n            _this[options].prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && current.axis === 'X') {\n                if (_this[movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[movableEle], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[element], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n            }\n            _this[fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeContentRender, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new FreezeContentRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","rowDeselecting","movableContent","frozenContent","content","dataRowIndex","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","portals","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","rowsObj","getRowsObject","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","rowDragAndDropModule","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","isVue","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","enableVirtualMaskRow","triggerEvents","IsExpandCollapseClicked","bindGridEvents","rowSelecting","events.rowDeselecting","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","isQueryInvokedFromData","callBackPromise_2","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","isFrozenGrid","literals.movableContent","literals.frozenContent","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","getVisibleRecords","sHeight","scrollHeight","clientHeight","getContent","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","this_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","blockIndexes","getBlockIndexes","url","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","pageSize","propname","skip","size","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","literals.dataRowIndex","rowCollection","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","xAxis","axis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","virtualEle","adjustTable","header","sentinel","outBuffer","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","virtualScrollHandlers","movableContainer","delay","debounced50","debounce","prevTop","prevLeft","scrollbar","delta","clearTimeout","setTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","literals.content","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","wrapper","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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"}
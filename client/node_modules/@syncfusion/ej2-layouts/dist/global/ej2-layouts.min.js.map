{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.needsID = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.initializeValues = function () {\n        this.allPanes = [];\n        this.paneOrder = [];\n        this.separatorOrder = [];\n        this.allBars = [];\n        this.previousCoordinates = {};\n        this.currentCoordinates = {};\n        this.updatePrePaneInPercentage = false;\n        this.updateNextPaneInPercentage = false;\n        this.panesDimensions = [];\n        this.border = 0;\n        this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        this.iconsDelay = 300;\n        this.templateElement = [];\n        this.collapseFlag = false;\n        this.expandFlag = true;\n    };\n    Splitter.prototype.preRender = function () {\n        this.initializeValues();\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0, len = children.length; i < len; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0, len = this.allBars.length; j < len; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0, len = this.allPanes.length; i < len; i++) {\n            if (this.allPanes[i].innerText === '' ? !(this.paneSettings[i].size) || !(this.allPanes[i].innerText === '')\n                : !(this.paneSettings[i].size) && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0, len = flexPaneIndexes.length; j < len; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if ((this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight) < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - (this.orientation === 'Horizontal' ?\n                            this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight);\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        var updatePaneOffset = this.orientation === 'Horizontal' ? updatePane.offsetWidth : updatePane.offsetHeight;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePaneOffset + sizeDiff) + '%'\n                            : (updatePaneOffset + sizeDiff) + 'px';\n                        var flexPaneOffset = this.orientation === 'Horizontal' ? flexPane.offsetWidth : flexPane.offsetHeight;\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPaneOffset - sizeDiff) + '%' : (flexPaneOffset - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        this.updateSplitterSize();\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.flexGrow = '';\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left + window.scrollX :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        // eslint-disable-next-line\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        // eslint-disable-next-line\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (((item.minSizeX) * this.getCellSize()[0]) + (item.minSizeX - 1) * this.cellSpacing[0]);\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (((item.minSizeY) * this.getCellSize()[1]) + (item.minSizeY - 1) * this.cellSpacing[1]);\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                var internalPanels = this.element.querySelectorAll(((this.element.id) ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n                for (var i = 0; i < internalPanels.length; i++) {\n                    var ele = internalPanels[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // eslint-disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        // eslint-disable-next-line radix\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            var entirePanelsY = 0;\n            for (var i = 0; i < this.panels.length; i++) {\n                if (this.panels[i].sizeY) {\n                    entirePanelsY += this.panels[i].sizeY;\n                }\n            }\n            heightValue = ((entirePanelsY) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (entirePanelsY - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        // eslint-disable-next-line prefer-const\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // eslint-disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    // eslint-disable-next-line no-self-assign\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = document.getElementById(this.panels[i].id);\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id] && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    // eslint-disable-next-line\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector(\".e-resize\")) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString()\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // eslint-disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        // eslint-disable-next-line\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    // eslint-disable-next-line\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","needsID","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","allBars","allPanes","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","border","add","initializeValues","paneOrder","separatorOrder","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","EventHandler","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","expand","collapse","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","updateSplitterSize","iswindowResize","len","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","updatePaneOffset","convertPixelToPercentage","flexPaneOffset","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","getSeparatorPosition","rectBound","left","window","scrollX","top","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","trim","templateFn","outerHTML","compile","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","isStringTemplate","templateElements","tagName","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","column","oldRow","updateLayout","internalPanels","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","getRowColumn","setHeightWidth","heightValue","widthValue","entirePanelsY","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","adjustmentAvailable","leftAdjustable","rightAdjustable","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","this_4","localPanel","pan"],"mappings":"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"}
{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.needsID = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.initializeValues = function () {\n        this.allPanes = [];\n        this.paneOrder = [];\n        this.separatorOrder = [];\n        this.allBars = [];\n        this.previousCoordinates = {};\n        this.currentCoordinates = {};\n        this.updatePrePaneInPercentage = false;\n        this.updateNextPaneInPercentage = false;\n        this.panesDimensions = [];\n        this.border = 0;\n        this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        this.iconsDelay = 300;\n        this.templateElement = [];\n        this.collapseFlag = false;\n        this.expandFlag = true;\n    };\n    Splitter.prototype.preRender = function () {\n        this.initializeValues();\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0, len = children.length; i < len; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0, len = this.allBars.length; j < len; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0, len = this.allPanes.length; i < len; i++) {\n            if (this.allPanes[i].innerText === '' ? !(this.paneSettings[i].size) || !(this.allPanes[i].innerText === '')\n                : !(this.paneSettings[i].size) && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0, len = flexPaneIndexes.length; j < len; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if ((this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight) < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - (this.orientation === 'Horizontal' ?\n                            this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight);\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        var updatePaneOffset = this.orientation === 'Horizontal' ? updatePane.offsetWidth : updatePane.offsetHeight;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePaneOffset + sizeDiff) + '%'\n                            : (updatePaneOffset + sizeDiff) + 'px';\n                        var flexPaneOffset = this.orientation === 'Horizontal' ? flexPane.offsetWidth : flexPane.offsetHeight;\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPaneOffset - sizeDiff) + '%' : (flexPaneOffset - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        this.updateSplitterSize();\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.flexGrow = '';\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left + window.scrollX :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        // eslint-disable-next-line\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        // eslint-disable-next-line\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (((item.minSizeX) * this.getCellSize()[0]) + (item.minSizeX - 1) * this.cellSpacing[0]);\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (((item.minSizeY) * this.getCellSize()[1]) + (item.minSizeY - 1) * this.cellSpacing[1]);\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                var internalPanels = this.element.querySelectorAll(((this.element.id) ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n                for (var i = 0; i < internalPanels.length; i++) {\n                    var ele = internalPanels[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // eslint-disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        // eslint-disable-next-line radix\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            var entirePanelsY = 0;\n            for (var i = 0; i < this.panels.length; i++) {\n                if (this.panels[i].sizeY) {\n                    entirePanelsY += this.panels[i].sizeY;\n                }\n            }\n            heightValue = ((entirePanelsY) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (entirePanelsY - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        // eslint-disable-next-line prefer-const\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // eslint-disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    // eslint-disable-next-line no-self-assign\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = document.getElementById(this.panels[i].id);\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id] && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    // eslint-disable-next-line\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector(\".e-resize\")) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString()\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // eslint-disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        // eslint-disable-next-line\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    // eslint-disable-next-line\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","needsID","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","allBars","allPanes","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","border","add","initializeValues","paneOrder","separatorOrder","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","EventHandler","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","expand","collapse","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","updateSplitterSize","removeEventListener","iswindowResize","len","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","updatePaneOffset","convertPixelToPercentage","flexPaneOffset","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","getSeparatorPosition","rectBound","left","window","scrollX","top","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","trim","templateFn","outerHTML","compile","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","isStringTemplate","templateElements","tagName","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","column","oldRow","updateLayout","internalPanels","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","getRowColumn","setHeightWidth","heightValue","widthValue","entirePanelsY","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","adjustmentAvailable","leftAdjustable","rightAdjustable","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"mappings":"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"}